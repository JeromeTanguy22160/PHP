1-La liste de tous les utilisateurs ;

SELECT * FROM users

2-La liste de tous les utilisateurs rangée par noms de famille ;

SELECT * FROM `users` ORDER BY last_name

3-Le dernier utilisateur inscrit ;

SELECT * FROM users ORDER BY registration_date DESC LIMIT 1

4-La liste de tous les utilisateurs fêtant leur anniversaire ce mois-ci ;

SELECT * FROM users WHERE MONTH(birthdate) = MONTH(CURDATE())

5-Le nombre total d'utilisateurs ;

SELECT COUNT(*) FROM users

6-La liste de tous les utilisateurs associés à leurs villes respectives ;

SELECT users.* , addresses.city 
FROM users JOIN addresses 
ON users.id = addresses.user_id

7-La liste de tous les utilisateurs vivant à une adresse sans numéro ;

SELECT users.* , addresses.number 
FROM users JOIN addresses 
ON users.id = addresses.user_id 
WHERE addresses.number IS NULL

8-La liste de tous les produits dont le prix est supérieur à 1 000 € ;

SELECT * FROM `products` WHERE price > 1000

9-La liste de tous les produits associés à leurs photos respectives ;

SELECT products.* , pictures.url 
FROM products JOIN pictures 
ON products.id = pictures.product_id

10-La liste de tous les produits appartenant à la catégorie « Voyage » ;

SELECT 
    products.* , 
    products_categories.category_id, 
    categories.title 
FROM products 
JOIN products_categories ON products.id = products_categories.product_id 
JOIN categories ON products_categories.category_id = categories.id 
WHERE categories.title = "Voyage"


11-La liste de tous les utilisateurs ayant effectué plus de dix commandes ;

SELECT 
    users.last_name, users.first_name, users.id,
    COUNT(DISTINCT orders.id)
FROM users
JOIN orders ON users.id = orders.user_id
JOIN products_orders ON orders.id = products_orders.order_id
GROUP BY users.first_name, users.last_name, users.id
HAVING COUNT(DISTINCT orders.id) > 10;

12-La liste de tous les produits achetés par le premier utilisateur inscrit.

SELECT 
    products.*
FROM products
JOIN products_orders ON products.id = products_orders.product_id
JOIN orders ON products_orders.order_id = orders.id
JOIN users ON orders.user_id = users.id
WHERE user_id = (SELECT id FROM users ORDER BY registration_date LIMIT 1)



Requête 1
Le nom, la description et le prix de chacun des produits.

SELECT products.name, 
       products.description ,
       products.price 
FROM products

Requête 2
Le nom, la description et le prix de chacun des produits des produits de moins de 42€ du plus cher au moins cher.

SELECT products.name, 
       products.description ,
       products.price 
FROM products
WHERE products.price < 42
ORDER BY products.price DESC

Requête 3
Le nom de la ville, le code postal, le numéro de rue et l'intitulé de la rue des adresses.

SELECT addresses.city, addresses.postal_code , addresses.street, addresses.number FROM addresses

Requête 4
Le nom de la ville, le code postal, le numéro de rue et l'intitulé de la rue des adresses dont le nom de la ville commence par A.

SELECT addresses.city, addresses.postal_code , addresses.street, addresses.number FROM addresses WHERE addresses.city like 'a%'

Requête 5
La liste de tous les utilisateurs

SELECT * FROM users

Requête 6
La liste de tous les utilisateurs rangée par date de naissance

SELECT * FROM users ORDER BY birthdate

Requête 7
La liste de tous les utilisateurs rangée par date de naissance de plus de 5O ans

SELECT * FROM users WHERE (SELECT DATEDIFF(CURRENT_DATE(),birthdate) > 18250) ORDER BY birthdate

Requête 8
La liste de tous les utilisateurs rangée par date de naissance, de plus de 5O ans et en ajoutant une colonne nommé "Age" pour afficher leur âge calculé actuel

SELECT * ,
	FLOOR(DATEDIFF(CURRENT_DATE(),birthdate)/365) AS age
FROM users 
WHERE  DATEDIFF(CURRENT_DATE(), birthdate) > 18250
ORDER BY birthdate 


